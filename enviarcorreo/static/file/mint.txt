function previewFile() {
    var preview = document.querySelector('img');
    var file = document.querySelector('input[type=file]').files[0];
    var reader = new FileReader();

    reader.onloadend = function () {
        var canvas = document.getElementById("canvas");
        function getPosition(obj) {
            var curleft = 0, curtop = 0;
            if (obj.offsetParent) {
                do {
                    curleft += obj.offsetLeft;
                    curtop += obj.offsetTop;
                } while (obj = obj.offsetParent);
                return { x: curleft, y: curtop };
            }
            return undefined;
        }
        function rgbToHex(r, g, b) {
            if (r > 255 || g > 255 || b > 255)
                throw "Invalid color component";
            return ((r << 16) | (g << 8) | b).toString(16);
        }

        function drawImageFromWebUrl(sourceurl) {
            var img = new Image();

            img.addEventListener("load", function () {
                // The image can be drawn from any source
                canvas.getContext("2d").drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);

            });

            img.setAttribute("src", sourceurl);
        }
        // Draw a base64 image because this is a fiddle, and if we try with an image from URL we'll get tainted canvas error
        // Read more about here : http://ourcodeworld.com/articles/read/182/the-canvas-has-been-tainted-by-cross-origin-data-and-tainted-canvases-may-not-be-exported
        drawImageFromWebUrl(reader.result);

        canvas.addEventListener("mousemove", function (e) {
            var pos = getPosition(this);
            var x = e.pageX - pos.x;
            var y = e.pageY - pos.y;
            var coord = "x=" + x + ", y=" + y;
            var c = this.getContext('2d');
            var p = c.getImageData(x, y, 1, 1).data;

            // If transparency on the image
            if ((p[0] == 0) && (p[1] == 0) && (p[2] == 0) && (p[3] == 0)) {
                coord += " (Transparent color detected, cannot be converted to HEX)";
            }
            
            var hex = "#" + ("000000" + rgbToHex(p[0], p[1], p[2])).slice(-6);
            const hexToRgb = hex =>
            hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i
             ,(m, r, g, b) => '#' + r + r + g + g + b + b)
            .substring(1).match(/.{2}/g)
            .map(x => parseInt(x, 16));
            var rgb = hexToRgb(hex);
            document.getElementById("rgb").innerHTML = "Rgb: "+rgb.toString();
            document.getElementById("hex").innerHTML = "Hexagesimal: "+hex;
            document.getElementById("status").innerHTML = coord;
            document.getElementById("color").style.backgroundColor = hex;
        }, false);

        var imagenes = [
            reader.result,
            
          ];
          
          function cargarImagen(){
            // Si no hay más imagenes salimos
            if (!imagenes.length) return;
            
            // Cogemos imagen a cargar
            var ruta = imagenes.pop();
            var imagen = new Image();
            // Una vez cargada se procesará
            imagen.addEventListener('load', imagenCargada);
            // Cargamos la ruta en la imagen
            imagen.src = ruta;
          }
          
          function imagenCargada(e){
            // Coger las propiedades
            // El nombre lo extraemos de la ruta (entre el último / y el primer ?)
            // Ancho y alto: naturalWidth y naturalHeight
            // Para el tamaño hay que complicarse un poco más
            var p = document.createElement('p');
            
            var fileName = e.target.src.substring(e.target.src.lastIndexOf('/') + 1);
            if (fileName.indexOf('?') >= 0){
              // Para quitar el querystring
              fileName = fileName.substr(0, fileName.indexOf('?'));
            }
            
            var width = e.target.naturalWidth;
            var height = e.target.naturalHeight;  
            
            fetch(e.target.src).then(resp => resp.blob())
            .then(blob => {
                document.getElementById('title').innerHTML = "Nombre: "+ file.name.split(".")[0];
                document.getElementById('dimensiones').innerHTML = "Resolucion: "+ width +'px x ' + height + 'px';
                document.getElementById('Peso').innerHTML = "Tamano: "+ parseInt(blob.size / 1024) + 'Kb';
                document.getElementById('Formato').innerHTML = "Formato: "+ file.name.split(".")[1];
            });
            // Cargar siguiente imagen
            cargarImagen();
          }
          
          cargarImagen();
    }
    if (file) {
        reader.readAsDataURL(file);
    } else {
        preview.src = "";
    }
}



